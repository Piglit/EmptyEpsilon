From fd61b7d39116e1f4af495f3e88b3452d157c2416 Mon Sep 17 00:00:00 2001
From: Pithlit <piglit@mail.de>
Date: Wed, 2 Nov 2022 16:01:38 +0100
Subject: [PATCH 3/7] auto-reload for template

---
 src/shipTemplate.cpp           | 1 +
 src/shipTemplate.h             | 4 ++++
 src/spaceObjects/spaceship.cpp | 1 +
 3 files changed, 6 insertions(+)

diff --git a/src/shipTemplate.cpp b/src/shipTemplate.cpp
index f8e582c2..9b8acda9 100644
--- a/src/shipTemplate.cpp
+++ b/src/shipTemplate.cpp
@@ -122,6 +122,7 @@ REGISTER_SCRIPT_CLASS(ShipTemplate)
     REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, setCanCombatManeuver);
     REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, setCanSelfDestruct);
     REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, setCanLaunchProbe);
+    REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, setAutoMissileReload);
     /// Return a new template with the given name, which is an exact copy of this template.
     /// Used to make easy variations of templates.
     REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, copy);
diff --git a/src/shipTemplate.h b/src/shipTemplate.h
index 9906379e..f3b11ac5 100644
--- a/src/shipTemplate.h
+++ b/src/shipTemplate.h
@@ -105,6 +105,9 @@ public:
     bool can_self_destruct = true;
     bool can_launch_probe = true;
 
+    // Ship automation features, mostly for single-person ships like fighters
+    bool auto_reload_tube_enabled = false;
+
     float energy_storage_amount;
     int repair_crew_count;
     string default_ai_name;
@@ -153,6 +156,7 @@ public:
     void setCanCombatManeuver(bool enabled) { can_combat_maneuver = enabled; }
     void setCanSelfDestruct(bool enabled) { can_self_destruct = enabled; }
     void setCanLaunchProbe(bool enabled) { can_launch_probe = enabled; }
+    void setAutoMissileReload(bool active) { auto_reload_tube_enabled = active; }
     void setMesh(string model, string color_texture, string specular_texture, string illumination_texture);
     void setEnergyStorage(float energy_amount);
     void setRepairCrewCount(int amount);
diff --git a/src/spaceObjects/spaceship.cpp b/src/spaceObjects/spaceship.cpp
index 4eee40e0..e67f73ec 100644
--- a/src/spaceObjects/spaceship.cpp
+++ b/src/spaceObjects/spaceship.cpp
@@ -357,6 +357,7 @@ void SpaceShip::applyTemplateValues()
     for(int n=0; n<MW_Count; n++)
         weapon_storage[n] = weapon_storage_max[n] = ship_template->weapon_storage[n];
 
+    auto_reload_tube_enabled = ship_template->auto_reload_tube_enabled;
     ship_template->setCollisionData(this);
     model_info.setData(ship_template->model_data);
 }
-- 
2.39.1

