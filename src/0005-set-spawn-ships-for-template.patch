From e43ce2ffd7d803914ebe36ebf81e451b9d59de46 Mon Sep 17 00:00:00 2001
From: Pithlit <piglit@mail.de>
Date: Wed, 2 Nov 2022 16:02:39 +0100
Subject: [PATCH 5/7] set spawn ships for template

---
 src/shipTemplate.cpp | 1 +
 src/shipTemplate.h   | 5 +++++
 2 files changed, 6 insertions(+)

diff --git a/src/shipTemplate.cpp b/src/shipTemplate.cpp
index 6e82125c..fdd036d3 100644
--- a/src/shipTemplate.cpp
+++ b/src/shipTemplate.cpp
@@ -125,6 +125,7 @@ REGISTER_SCRIPT_CLASS(ShipTemplate)
     REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, setAutoCoolant);
     REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, setAutoRepair);
     REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, setAutoMissileReload);
+    REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, setSpawnShips);
     /// Return a new template with the given name, which is an exact copy of this template.
     /// Used to make easy variations of templates.
     REGISTER_SCRIPT_CLASS_FUNCTION(ShipTemplate, copy);
diff --git a/src/shipTemplate.h b/src/shipTemplate.h
index 51bfc489..44dab9a2 100644
--- a/src/shipTemplate.h
+++ b/src/shipTemplate.h
@@ -110,6 +110,8 @@ public:
     bool auto_coolant_enabled = false;
     bool auto_reload_tube_enabled = false;
 
+    std::vector<string> spawnable_ships;
+
     float energy_storage_amount;
     int repair_crew_count;
     string default_ai_name;
@@ -161,6 +163,9 @@ public:
     void setAutoCoolant(bool active) { auto_coolant_enabled = active; }
     void setAutoRepair(bool active) { auto_repair_enabled = active; }
     void setAutoMissileReload(bool active) { auto_reload_tube_enabled = active; }
+
+    void setSpawnShips(const std::vector<string>& templates) {spawnable_ships = std::vector<string>(templates.begin(), templates.end());}
+
     void setMesh(string model, string color_texture, string specular_texture, string illumination_texture);
     void setEnergyStorage(float energy_amount);
     void setRepairCrewCount(int amount);
-- 
2.39.1

